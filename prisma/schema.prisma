// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

  // output   = "../src/generated/prisma"
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id           String   @id @default(cuid())
  name         String
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())

  orders       Order[]
}

model Product {
  id          String   @id @default(cuid())
  slug        String   @unique
  name        String
  description String
  priceCents  Int
  imageUrl    String
  category    String
  stock       Int       @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  orderItems  OrderItem[]
}

model Order {
  id         String      @id @default(cuid())
  email      String
  status     OrderStatus @default(CONFIRMED)
  totalCents Int
  createdAt  DateTime    @default(now())

  userId     String?     // opcional: se quiser associar ao User autenticado
  user       User?       @relation(fields: [userId], references: [id])

  items      OrderItem[]
}

model OrderItem {
  id             String  @id @default(cuid())
  orderId        String
  productId      String
  quantity       Int
  unitPriceCents Int

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PAID
  CANCELLED
}